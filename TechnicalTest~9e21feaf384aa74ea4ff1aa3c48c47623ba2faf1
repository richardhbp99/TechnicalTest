commit 3e6ae34da31d6e9f7233eba8808d99e0ff7a2f2c
Author: richardhbp99 <richardbejarano29@gmail.com>
Date:   Thu Aug 1 14:55:39 2024 -0500

    feat: initial commit with project structure

diff --git a/TechnicalTest/Security/__init__.py b/TechnicalTest/Security/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/Security/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/Security/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..55d3081
Binary files /dev/null and b/TechnicalTest/Security/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/Security/__pycache__/admin.cpython-312.pyc b/TechnicalTest/Security/__pycache__/admin.cpython-312.pyc
new file mode 100644
index 0000000..98dc752
Binary files /dev/null and b/TechnicalTest/Security/__pycache__/admin.cpython-312.pyc differ
diff --git a/TechnicalTest/Security/__pycache__/apps.cpython-312.pyc b/TechnicalTest/Security/__pycache__/apps.cpython-312.pyc
new file mode 100644
index 0000000..bd0c3f3
Binary files /dev/null and b/TechnicalTest/Security/__pycache__/apps.cpython-312.pyc differ
diff --git a/TechnicalTest/Security/__pycache__/models.cpython-312.pyc b/TechnicalTest/Security/__pycache__/models.cpython-312.pyc
new file mode 100644
index 0000000..6ed74b0
Binary files /dev/null and b/TechnicalTest/Security/__pycache__/models.cpython-312.pyc differ
diff --git a/TechnicalTest/Security/admin.py b/TechnicalTest/Security/admin.py
new file mode 100644
index 0000000..8c38f3f
--- /dev/null
+++ b/TechnicalTest/Security/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/TechnicalTest/Security/apps.py b/TechnicalTest/Security/apps.py
new file mode 100644
index 0000000..d05d0cd
--- /dev/null
+++ b/TechnicalTest/Security/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class SecurityConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'Security'
diff --git a/TechnicalTest/Security/migrations/0001_initial.py b/TechnicalTest/Security/migrations/0001_initial.py
new file mode 100644
index 0000000..96b789f
--- /dev/null
+++ b/TechnicalTest/Security/migrations/0001_initial.py
@@ -0,0 +1,30 @@
+# Generated by Django 5.0.7 on 2024-08-01 16:05
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Person',
+            fields=[
+                ('id_person', models.AutoField(db_column='id_person', editable=False, primary_key=True, serialize=False)),
+                ('names', models.CharField(db_column='names', max_length=200)),
+                ('last_names', models.CharField(db_column='last_names', max_length=200)),
+                ('identification_number', models.CharField(db_column='identification_number', max_length=50, unique=True)),
+                ('email', models.EmailField(db_column='email', max_length=254, unique=True)),
+                ('phone_number', models.CharField(blank=True, db_column='phone_number', max_length=15, null=True)),
+            ],
+            options={
+                'verbose_name': 'Person',
+                'verbose_name_plural': 'People',
+                'db_table': 'T101Person',
+            },
+        ),
+    ]
diff --git a/TechnicalTest/Security/migrations/0002_alter_person_email_alter_person_id_person_and_more.py b/TechnicalTest/Security/migrations/0002_alter_person_email_alter_person_id_person_and_more.py
new file mode 100644
index 0000000..e4d16c0
--- /dev/null
+++ b/TechnicalTest/Security/migrations/0002_alter_person_email_alter_person_id_person_and_more.py
@@ -0,0 +1,43 @@
+# Generated by Django 5.0.7 on 2024-08-01 16:12
+
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    dependencies = [
+        ('Security', '0001_initial'),
+    ]
+
+    operations = [
+        migrations.AlterField(
+            model_name='person',
+            name='email',
+            field=models.EmailField(max_length=254, unique=True),
+        ),
+        migrations.AlterField(
+            model_name='person',
+            name='id_person',
+            field=models.AutoField(editable=False, primary_key=True, serialize=False),
+        ),
+        migrations.AlterField(
+            model_name='person',
+            name='identification_number',
+            field=models.CharField(max_length=50, unique=True),
+        ),
+        migrations.AlterField(
+            model_name='person',
+            name='last_names',
+            field=models.CharField(max_length=200),
+        ),
+        migrations.AlterField(
+            model_name='person',
+            name='names',
+            field=models.CharField(max_length=200),
+        ),
+        migrations.AlterField(
+            model_name='person',
+            name='phone_number',
+            field=models.CharField(blank=True, max_length=15, null=True),
+        ),
+    ]
diff --git a/TechnicalTest/Security/migrations/__init__.py b/TechnicalTest/Security/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/Security/migrations/__pycache__/0001_initial.cpython-312.pyc b/TechnicalTest/Security/migrations/__pycache__/0001_initial.cpython-312.pyc
new file mode 100644
index 0000000..85ee547
Binary files /dev/null and b/TechnicalTest/Security/migrations/__pycache__/0001_initial.cpython-312.pyc differ
diff --git a/TechnicalTest/Security/migrations/__pycache__/0002_alter_person_email_alter_person_id_person_and_more.cpython-312.pyc b/TechnicalTest/Security/migrations/__pycache__/0002_alter_person_email_alter_person_id_person_and_more.cpython-312.pyc
new file mode 100644
index 0000000..0b61fe7
Binary files /dev/null and b/TechnicalTest/Security/migrations/__pycache__/0002_alter_person_email_alter_person_id_person_and_more.cpython-312.pyc differ
diff --git a/TechnicalTest/Security/migrations/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/Security/migrations/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..79916f0
Binary files /dev/null and b/TechnicalTest/Security/migrations/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/Security/models.py b/TechnicalTest/Security/models.py
new file mode 100644
index 0000000..3ab6ba4
--- /dev/null
+++ b/TechnicalTest/Security/models.py
@@ -0,0 +1,18 @@
+from django.db import models
+
+# Create your models here.
+class Person(models.Model):
+    id_person = models.AutoField(primary_key=True, editable=False)
+    names = models.CharField(max_length=200, null=False)
+    last_names = models.CharField(max_length=200, null=False)
+    identification_number = models.CharField(max_length=50, unique=True, blank=False, null=False)
+    email = models.EmailField(max_length=254, unique=True, blank=False, null=False)
+    phone_number = models.CharField(max_length=15, blank=True, null=True)
+    
+    class Meta:
+        db_table = 'T101Person'
+        verbose_name = 'Person'
+        verbose_name_plural = 'People'
+
+    def __str__(self):
+        return f"{self.names} {self.last_names} ({self.identification_number}, {self.email}, {self.phone_number})"
\ No newline at end of file
diff --git a/TechnicalTest/Security/tests.py b/TechnicalTest/Security/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/TechnicalTest/Security/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/TechnicalTest/Security/views.py b/TechnicalTest/Security/views.py
new file mode 100644
index 0000000..91ea44a
--- /dev/null
+++ b/TechnicalTest/Security/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/TechnicalTest/Students/__init__.py b/TechnicalTest/Students/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/Students/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/Students/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..ec7cd4a
Binary files /dev/null and b/TechnicalTest/Students/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/Students/__pycache__/admin.cpython-312.pyc b/TechnicalTest/Students/__pycache__/admin.cpython-312.pyc
new file mode 100644
index 0000000..bdf9fb4
Binary files /dev/null and b/TechnicalTest/Students/__pycache__/admin.cpython-312.pyc differ
diff --git a/TechnicalTest/Students/__pycache__/apps.cpython-312.pyc b/TechnicalTest/Students/__pycache__/apps.cpython-312.pyc
new file mode 100644
index 0000000..da2dcd3
Binary files /dev/null and b/TechnicalTest/Students/__pycache__/apps.cpython-312.pyc differ
diff --git a/TechnicalTest/Students/__pycache__/models.cpython-312.pyc b/TechnicalTest/Students/__pycache__/models.cpython-312.pyc
new file mode 100644
index 0000000..08ab802
Binary files /dev/null and b/TechnicalTest/Students/__pycache__/models.cpython-312.pyc differ
diff --git a/TechnicalTest/Students/admin.py b/TechnicalTest/Students/admin.py
new file mode 100644
index 0000000..8c38f3f
--- /dev/null
+++ b/TechnicalTest/Students/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/TechnicalTest/Students/apps.py b/TechnicalTest/Students/apps.py
new file mode 100644
index 0000000..fceba1c
--- /dev/null
+++ b/TechnicalTest/Students/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class StudentsConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'Students'
diff --git a/TechnicalTest/Students/migrations/0001_initial.py b/TechnicalTest/Students/migrations/0001_initial.py
new file mode 100644
index 0000000..58ce14a
--- /dev/null
+++ b/TechnicalTest/Students/migrations/0001_initial.py
@@ -0,0 +1,27 @@
+# Generated by Django 5.0.7 on 2024-08-01 16:12
+
+import django.db.models.deletion
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+        ('Security', '0002_alter_person_email_alter_person_id_person_and_more'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Estudent',
+            fields=[
+                ('id_student', models.AutoField(editable=False, primary_key=True, serialize=False)),
+                ('code', models.CharField(max_length=200, unique=True)),
+                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Security.person')),
+            ],
+            options={
+                'db_table': 'T101Estudent',
+            },
+        ),
+    ]
diff --git a/TechnicalTest/Students/migrations/__init__.py b/TechnicalTest/Students/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/Students/migrations/__pycache__/0001_initial.cpython-312.pyc b/TechnicalTest/Students/migrations/__pycache__/0001_initial.cpython-312.pyc
new file mode 100644
index 0000000..489c93d
Binary files /dev/null and b/TechnicalTest/Students/migrations/__pycache__/0001_initial.cpython-312.pyc differ
diff --git a/TechnicalTest/Students/migrations/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/Students/migrations/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..866c81e
Binary files /dev/null and b/TechnicalTest/Students/migrations/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/Students/models.py b/TechnicalTest/Students/models.py
new file mode 100644
index 0000000..fa2627a
--- /dev/null
+++ b/TechnicalTest/Students/models.py
@@ -0,0 +1,12 @@
+from django.db import models
+
+
+
+# Create your models here.
+class Estudent(models.Model):
+    id_student = models.AutoField(primary_key=True, editable=False)
+    code = models.CharField(max_length=200 ,unique=True)
+    person = models.OneToOneField('Security.Person', on_delete=models.CASCADE)
+   
+    class Meta:
+        db_table = 'T201Estudent'
diff --git a/TechnicalTest/Students/tests.py b/TechnicalTest/Students/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/TechnicalTest/Students/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/TechnicalTest/Students/views.py b/TechnicalTest/Students/views.py
new file mode 100644
index 0000000..91ea44a
--- /dev/null
+++ b/TechnicalTest/Students/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/TechnicalTest/Subjects/__init__.py b/TechnicalTest/Subjects/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/Subjects/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/Subjects/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..628d042
Binary files /dev/null and b/TechnicalTest/Subjects/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/Subjects/__pycache__/admin.cpython-312.pyc b/TechnicalTest/Subjects/__pycache__/admin.cpython-312.pyc
new file mode 100644
index 0000000..03c9c26
Binary files /dev/null and b/TechnicalTest/Subjects/__pycache__/admin.cpython-312.pyc differ
diff --git a/TechnicalTest/Subjects/__pycache__/apps.cpython-312.pyc b/TechnicalTest/Subjects/__pycache__/apps.cpython-312.pyc
new file mode 100644
index 0000000..409c25d
Binary files /dev/null and b/TechnicalTest/Subjects/__pycache__/apps.cpython-312.pyc differ
diff --git a/TechnicalTest/Subjects/__pycache__/models.cpython-312.pyc b/TechnicalTest/Subjects/__pycache__/models.cpython-312.pyc
new file mode 100644
index 0000000..d4376b5
Binary files /dev/null and b/TechnicalTest/Subjects/__pycache__/models.cpython-312.pyc differ
diff --git a/TechnicalTest/Subjects/admin.py b/TechnicalTest/Subjects/admin.py
new file mode 100644
index 0000000..8c38f3f
--- /dev/null
+++ b/TechnicalTest/Subjects/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/TechnicalTest/Subjects/apps.py b/TechnicalTest/Subjects/apps.py
new file mode 100644
index 0000000..83faa43
--- /dev/null
+++ b/TechnicalTest/Subjects/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class SubjectsConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'Subjects'
diff --git a/TechnicalTest/Subjects/migrations/__init__.py b/TechnicalTest/Subjects/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/Subjects/migrations/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/Subjects/migrations/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..d64cf04
Binary files /dev/null and b/TechnicalTest/Subjects/migrations/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/Subjects/models.py b/TechnicalTest/Subjects/models.py
new file mode 100644
index 0000000..71a8362
--- /dev/null
+++ b/TechnicalTest/Subjects/models.py
@@ -0,0 +1,3 @@
+from django.db import models
+
+# Create your models here.
diff --git a/TechnicalTest/Subjects/tests.py b/TechnicalTest/Subjects/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/TechnicalTest/Subjects/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/TechnicalTest/Subjects/views.py b/TechnicalTest/Subjects/views.py
new file mode 100644
index 0000000..91ea44a
--- /dev/null
+++ b/TechnicalTest/Subjects/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/TechnicalTest/Teachers/__init__.py b/TechnicalTest/Teachers/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/Teachers/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/Teachers/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..e7cfe1a
Binary files /dev/null and b/TechnicalTest/Teachers/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/Teachers/__pycache__/admin.cpython-312.pyc b/TechnicalTest/Teachers/__pycache__/admin.cpython-312.pyc
new file mode 100644
index 0000000..cf18b87
Binary files /dev/null and b/TechnicalTest/Teachers/__pycache__/admin.cpython-312.pyc differ
diff --git a/TechnicalTest/Teachers/__pycache__/apps.cpython-312.pyc b/TechnicalTest/Teachers/__pycache__/apps.cpython-312.pyc
new file mode 100644
index 0000000..8f60f37
Binary files /dev/null and b/TechnicalTest/Teachers/__pycache__/apps.cpython-312.pyc differ
diff --git a/TechnicalTest/Teachers/__pycache__/models.cpython-312.pyc b/TechnicalTest/Teachers/__pycache__/models.cpython-312.pyc
new file mode 100644
index 0000000..aa3d882
Binary files /dev/null and b/TechnicalTest/Teachers/__pycache__/models.cpython-312.pyc differ
diff --git a/TechnicalTest/Teachers/admin.py b/TechnicalTest/Teachers/admin.py
new file mode 100644
index 0000000..8c38f3f
--- /dev/null
+++ b/TechnicalTest/Teachers/admin.py
@@ -0,0 +1,3 @@
+from django.contrib import admin
+
+# Register your models here.
diff --git a/TechnicalTest/Teachers/apps.py b/TechnicalTest/Teachers/apps.py
new file mode 100644
index 0000000..a758586
--- /dev/null
+++ b/TechnicalTest/Teachers/apps.py
@@ -0,0 +1,6 @@
+from django.apps import AppConfig
+
+
+class TeachersConfig(AppConfig):
+    default_auto_field = 'django.db.models.BigAutoField'
+    name = 'Teachers'
diff --git a/TechnicalTest/Teachers/migrations/0001_initial.py b/TechnicalTest/Teachers/migrations/0001_initial.py
new file mode 100644
index 0000000..168d0d8
--- /dev/null
+++ b/TechnicalTest/Teachers/migrations/0001_initial.py
@@ -0,0 +1,26 @@
+# Generated by Django 5.0.7 on 2024-08-01 16:12
+
+import django.db.models.deletion
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = [
+        ('Security', '0002_alter_person_email_alter_person_id_person_and_more'),
+    ]
+
+    operations = [
+        migrations.CreateModel(
+            name='Teacher',
+            fields=[
+                ('id_teacher', models.AutoField(editable=False, primary_key=True, serialize=False)),
+                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Security.person')),
+            ],
+            options={
+                'db_table': 'T301Teacher',
+            },
+        ),
+    ]
diff --git a/TechnicalTest/Teachers/migrations/__init__.py b/TechnicalTest/Teachers/migrations/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/Teachers/migrations/__pycache__/0001_initial.cpython-312.pyc b/TechnicalTest/Teachers/migrations/__pycache__/0001_initial.cpython-312.pyc
new file mode 100644
index 0000000..85ea46e
Binary files /dev/null and b/TechnicalTest/Teachers/migrations/__pycache__/0001_initial.cpython-312.pyc differ
diff --git a/TechnicalTest/Teachers/migrations/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/Teachers/migrations/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..1192e02
Binary files /dev/null and b/TechnicalTest/Teachers/migrations/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/Teachers/models.py b/TechnicalTest/Teachers/models.py
new file mode 100644
index 0000000..9b4927d
--- /dev/null
+++ b/TechnicalTest/Teachers/models.py
@@ -0,0 +1,9 @@
+from django.db import models
+
+# Create your models here.
+class Teacher(models.Model):
+    id_teacher = models.AutoField(primary_key=True, editable=False)
+    person = models.OneToOneField('Security.Person', on_delete=models.CASCADE)
+   
+    class Meta:
+        db_table = 'T301Teacher'
diff --git a/TechnicalTest/Teachers/tests.py b/TechnicalTest/Teachers/tests.py
new file mode 100644
index 0000000..7ce503c
--- /dev/null
+++ b/TechnicalTest/Teachers/tests.py
@@ -0,0 +1,3 @@
+from django.test import TestCase
+
+# Create your tests here.
diff --git a/TechnicalTest/Teachers/views.py b/TechnicalTest/Teachers/views.py
new file mode 100644
index 0000000..91ea44a
--- /dev/null
+++ b/TechnicalTest/Teachers/views.py
@@ -0,0 +1,3 @@
+from django.shortcuts import render
+
+# Create your views here.
diff --git a/TechnicalTest/TechnicalTest/__init__.py b/TechnicalTest/TechnicalTest/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/TechnicalTest/TechnicalTest/__pycache__/__init__.cpython-312.pyc b/TechnicalTest/TechnicalTest/__pycache__/__init__.cpython-312.pyc
new file mode 100644
index 0000000..30c8ef9
Binary files /dev/null and b/TechnicalTest/TechnicalTest/__pycache__/__init__.cpython-312.pyc differ
diff --git a/TechnicalTest/TechnicalTest/__pycache__/settings.cpython-312.pyc b/TechnicalTest/TechnicalTest/__pycache__/settings.cpython-312.pyc
new file mode 100644
index 0000000..3e22024
Binary files /dev/null and b/TechnicalTest/TechnicalTest/__pycache__/settings.cpython-312.pyc differ
diff --git a/TechnicalTest/TechnicalTest/__pycache__/urls.cpython-312.pyc b/TechnicalTest/TechnicalTest/__pycache__/urls.cpython-312.pyc
new file mode 100644
index 0000000..0e5f9ca
Binary files /dev/null and b/TechnicalTest/TechnicalTest/__pycache__/urls.cpython-312.pyc differ
diff --git a/TechnicalTest/TechnicalTest/__pycache__/wsgi.cpython-312.pyc b/TechnicalTest/TechnicalTest/__pycache__/wsgi.cpython-312.pyc
new file mode 100644
index 0000000..0a18f76
Binary files /dev/null and b/TechnicalTest/TechnicalTest/__pycache__/wsgi.cpython-312.pyc differ
diff --git a/TechnicalTest/TechnicalTest/asgi.py b/TechnicalTest/TechnicalTest/asgi.py
new file mode 100644
index 0000000..abc9dbf
--- /dev/null
+++ b/TechnicalTest/TechnicalTest/asgi.py
@@ -0,0 +1,16 @@
+"""
+ASGI config for TechnicalTest project.
+
+It exposes the ASGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/5.0/howto/deployment/asgi/
+"""
+
+import os
+
+from django.core.asgi import get_asgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'TechnicalTest.settings')
+
+application = get_asgi_application()
diff --git a/TechnicalTest/TechnicalTest/settings.py b/TechnicalTest/TechnicalTest/settings.py
new file mode 100644
index 0000000..3b5cb32
--- /dev/null
+++ b/TechnicalTest/TechnicalTest/settings.py
@@ -0,0 +1,128 @@
+"""
+Django settings for TechnicalTest project.
+
+Generated by 'django-admin startproject' using Django 5.0.7.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/5.0/topics/settings/
+
+For the full list of settings and their values, see
+https://docs.djangoproject.com/en/5.0/ref/settings/
+"""
+
+from pathlib import Path
+
+# Build paths inside the project like this: BASE_DIR / 'subdir'.
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+
+# Quick-start development settings - unsuitable for production
+# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/
+
+# SECURITY WARNING: keep the secret key used in production secret!
+SECRET_KEY = 'django-insecure-kzm1t)p@jerq7h655#azhmyiap3)kyt41myf4a)pm=!mhg)gl4'
+
+# SECURITY WARNING: don't run with debug turned on in production!
+DEBUG = True
+
+ALLOWED_HOSTS = []
+
+
+# Application definition
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'Security',
+    'Teachers',
+    'Students',
+    'Subjects',
+    
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'TechnicalTest.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [],
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+WSGI_APPLICATION = 'TechnicalTest.wsgi.application'
+
+
+# Database
+# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': BASE_DIR / 'db.sqlite3',
+    }
+}
+
+
+# Password validation
+# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
+
+AUTH_PASSWORD_VALIDATORS = [
+    {
+        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
+    },
+    {
+        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
+    },
+]
+
+
+# Internationalization
+# https://docs.djangoproject.com/en/5.0/topics/i18n/
+
+LANGUAGE_CODE = 'en-us'
+
+TIME_ZONE = 'UTC'
+
+USE_I18N = True
+
+USE_TZ = True
+
+
+# Static files (CSS, JavaScript, Images)
+# https://docs.djangoproject.com/en/5.0/howto/static-files/
+
+STATIC_URL = 'static/'
+
+# Default primary key field type
+# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field
+
+DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
diff --git a/TechnicalTest/TechnicalTest/urls.py b/TechnicalTest/TechnicalTest/urls.py
new file mode 100644
index 0000000..6711aa1
--- /dev/null
+++ b/TechnicalTest/TechnicalTest/urls.py
@@ -0,0 +1,22 @@
+"""
+URL configuration for TechnicalTest project.
+
+The `urlpatterns` list routes URLs to views. For more information please see:
+    https://docs.djangoproject.com/en/5.0/topics/http/urls/
+Examples:
+Function views
+    1. Add an import:  from my_app import views
+    2. Add a URL to urlpatterns:  path('', views.home, name='home')
+Class-based views
+    1. Add an import:  from other_app.views import Home
+    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
+Including another URLconf
+    1. Import the include() function: from django.urls import include, path
+    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
+"""
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
diff --git a/TechnicalTest/TechnicalTest/wsgi.py b/TechnicalTest/TechnicalTest/wsgi.py
new file mode 100644
index 0000000..eeb3db9
--- /dev/null
+++ b/TechnicalTest/TechnicalTest/wsgi.py
@@ -0,0 +1,16 @@
+"""
+WSGI config for TechnicalTest project.
+
+It exposes the WSGI callable as a module-level variable named ``application``.
+
+For more information on this file, see
+https://docs.djangoproject.com/en/5.0/howto/deployment/wsgi/
+"""
+
+import os
+
+from django.core.wsgi import get_wsgi_application
+
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'TechnicalTest.settings')
+
+application = get_wsgi_application()
diff --git a/TechnicalTest/db.sqlite3 b/TechnicalTest/db.sqlite3
new file mode 100644
index 0000000..a621d74
Binary files /dev/null and b/TechnicalTest/db.sqlite3 differ
diff --git a/TechnicalTest/manage.py b/TechnicalTest/manage.py
new file mode 100644
index 0000000..a8e1b54
--- /dev/null
+++ b/TechnicalTest/manage.py
@@ -0,0 +1,22 @@
+#!/usr/bin/env python
+"""Django's command-line utility for administrative tasks."""
+import os
+import sys
+
+
+def main():
+    """Run administrative tasks."""
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'TechnicalTest.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+
+if __name__ == '__main__':
+    main()
diff --git a/TechnicalTest/requirements.txt b/TechnicalTest/requirements.txt
new file mode 100644
index 0000000..e69de29
